#!/usr/bin/env bash

set -eu

ROOT="$(cd "$(dirname $0)/../../../.." && pwd)"

# we have moved pickelhelm to networking-oss-deployments from other c2c envs
# when those envs move they will need use this block too
if [[ "$ENVIRONMENT_NAME" == 'pickelhelm' || "$ENVIRONMENT_NAME" == 'mitre' ]]; then

  # replace admin password and secret in test config
  pushd "${ROOT}/test-config/environments/${ENVIRONMENT_NAME}/test-configs" > /dev/null
    ADMIN_PASSWORD="$(grep '^cf_admin_password:' ${ROOT}/variables/variables.yml | cut -d" " -f2)"
    sed -i -- "s/{{admin-password}}/${ADMIN_PASSWORD}/g" acceptance-test-config.json
    ADMIN_SECRET="$(grep '^uaa_admin_client_secret:' ${ROOT}/variables/variables.yml | cut -d" " -f2)"
    sed -i -- "s/{{admin-secret}}/${ADMIN_SECRET}/g" acceptance-test-config.json
  popd > /dev/null

  ENVIRONMENT_PATH="${ROOT}/test-config/environments/${ENVIRONMENT_NAME}/test-configs/acceptance-test-config.json"

# this else is for all the environments still in cf-networking-deployments
else

  # replace admin password and secret in test config
  pushd "${ROOT}/test-config/environments/${ENVIRONMENT_NAME}" > /dev/null
    ADMIN_PASSWORD="$(grep '^cf_admin_password:' ${ROOT}/variables/variables.yml | cut -d" " -f2)"
    sed -i -- "s/{{admin-password}}/${ADMIN_PASSWORD}/g" test-config.json
    ADMIN_SECRET="$(grep '^uaa_admin_client_secret:' ${ROOT}/variables/variables.yml | cut -d" " -f2)"
    sed -i -- "s/{{admin-secret}}/${ADMIN_SECRET}/g" test-config.json
  popd > /dev/null

  ENVIRONMENT_PATH="${ROOT}/test-config/environments/${ENVIRONMENT_NAME}/test-config.json"

fi

export CONFIG="${CONFIG:-"${ENVIRONMENT_PATH}"}"
export NETWORK_STATS_FILE="${ROOT}/network-stats/stats.json"
export APPS_DIR="${ROOT}/cf-networking/src/example-apps"
export RELEASE_DIR="${ROOT}/cf-networking"

BIN_DIR="${RELEASE_DIR}/bin"
mkdir -p "${BIN_DIR}"
export PATH="${BIN_DIR}:${PATH}"

pushd "${RELEASE_DIR}/src/code.cloudfoundry.org"
  go build -o "${BIN_DIR}/ginkgo" github.com/onsi/ginkgo/ginkgo
  ginkgo -keepGoing -randomizeAllSpecs -randomizeSuites -race "test/${TEST_NAME}"
popd
