---
name: policy-server
templates:
  bpm.yml.erb: config/bpm.yml
  policy-server.json.erb: config/policy-server.json
  pre-backup-lock.sh.erb: bin/bbr/pre-backup-lock
  post-backup-unlock.sh.erb: bin/bbr/post-backup-unlock

  server.crt.erb: config/certs/server.crt
  server.key.erb: config/certs/server.key
  
  uaa_ca.crt.erb: config/certs/uaa_ca.crt
  cc_ca.crt.erb: config/certs/cc_ca.crt
  database_ca.crt.erb: config/certs/database_ca.crt
  
  post-start.erb: bin/post-start
  pre-start.erb: bin/pre-start


packages:
  - policy-server
  - networking-ctl-utils

provides:
- name: dbconn
  type: dbconn
  properties:
  - database.type
  - database.username
  - database.password
  - database.port
  - database.name
  - database.host
  - database.require_ssl
  - database.ca_cert
  - database.skip_hostname_validation
- name: tag_length
  type: tag_length
  properties:
  - tag_length

consumes:
- name: database
  type: database
  optional: true
- name: cloud_controller_https_endpoint
  type: cloud_controller_https_endpoint
  optional: true

properties:
  disable:
    description: "Disable container to container networking."
    default: false

  policy_cleanup_interval:
    description: "Clean up stale policies on this interval, in minutes."
    default: 60

  max_policies_per_app_source:
    description: "Maximum policies a space developer may configure for an application source. Does not affect admin users."
    default: 50

  enable_space_developer_self_service:
    description: "Allows space developers to always be able to configure policies for the apps they own."
    default: false

  listen_ip:
    description: "IP address where the policy server will serve its API."
    default: 0.0.0.0

  listen_port:
    description: "Port where the policy server will serve its external API."
    default: 4002

  debug_port:
    description: "Port for the debug server. Use this to adjust log level at runtime or dump process stats."
    default: 31821

  enable_tls:
    description: "Use TLS server for external API server."
    default: false

  server_cert:
    description: "External API server certificate for TLS."

  server_key:
    description: "External API server key for TLS."

  uaa_client:
    description: |
      UAA client name. Must match the name of a UAA client with the following properties:
      `authorities: uaa.resource,cloud_controller.admin_read_only`,
      `authorities: uaa.resource,cloud_controller.admin_read_only`.
    default: network-policy

  uaa_client_secret:
    description: |
      UAA client secret. Must match the secret of the above UAA client.

  uaa_ca:
    description: "Trusted CA for UAA server."

  uaa_hostname:
    description: "Host name for the UAA server.  E.g. the service advertised via Consul DNS.  Must match common name in the UAA server cert. Must be listed in `uaa.zones.internal.hostnames`."
    default: uaa.service.cf.internal

  uaa_port:
    description: "Port of the UAA server. Must match `uaa.ssl.port`."
    default: 8443

  cc_hostname:
    description: |
      Host name for the Cloud Controller server for connecting to the non-secure api endpoint.
      If this value is not provided, policy-server will obtain the secure api endpoint by consuming
      the `cloud_controller_https_endpoint` link.
      The value supplied to this property must match the value supplied to the Cloud Controller
      property `cc.internal_service_hostname`.
    example: cloud-controller-ng.service.cf.internal

  cc_port:
    description: |
      External port of Cloud Controller server for connecting to the non-secure api endpoint.
      If this value is not provided, policy-server will obtain the secure api port by consuming
      the `cloud_controller_https_endpoint` link.
      The value supplied to this property must match the value supplied to the Cloud Controller
      property `cc.external_port`.
    example: 9022

  skip_ssl_validation:
    description: "Skip verifying ssl certs when speaking to UAA or Cloud Controller."
    default: false

  database.type:
    description: "Type of database: postgres or mysql."

  database.username:
    description: "Username for database connection."

  database.password:
    description: "Password for database connection."

  database.host:
    description: "Host (IP or DNS name) for database server."

  database.port:
    description: "Port for database server."

  database.name:
    description: "Name of logical database to use."

  database.connect_timeout_seconds:
    description: "Connection timeout between the policy server and its database."
    default: 120

  database.require_ssl:
    description: "Require ssl db connectivity when true. Must be used in conjuncture with a release that is configured with ssl."
    default: false

  database.ca_cert:
    description: "ca cert for db connectivity. Requires 'database.require_ssl' to be true."
    default: ~

  database.skip_hostname_validation:
    description: "Skip hostname validation when true. Requires 'database.require_ssl' to be true"
    default: false

  max_open_connections:
    description: |
      Maximum number of open connections to the SQL database.

      The number of necessary connections will scale with the number of requests to the `/networking/...` cf api endpoints.
    default: 200

  max_idle_connections:
    description: |
      Maximum number of idle connections to the SQL database.

      Idle connections will be retained until their `connections_max_lifetime_seconds` has been reached.
    default: 10

  connections_max_lifetime_seconds:
    description: |
      Sets the maximum amount of time a connection may be reused. Expired connections may be closed lazily before reuse.
      If value <= 0, connections are reused forever

      If there is a spike in connection usage, all of these connections have the potential to stick around with a high lifetime.
      Lowering the lifetime will result in connections getting reaped sooner, but the policy server may have to renegotiate connections
      more often, which could add some latency. We recommend using the default unless you have seen specific needs to change it.
    default: 3600

  tag_length:
    description: "Length in bytes of the packet tags to generate for policy sources and destinations. Must be greater than 0 and less than or equal to 4. If using VXLAN GBP, must be less than or equal to 2."
    default: 2

  metron_port:
    description: "Port of metron agent on localhost. This is used to forward metrics."
    default: 3457

  log_level:
    description: "Logging level (debug, info, warn, error)."
    default: info

  allowed_cors_domains:
    description: "List of domains (including scheme) from which Cross-Origin requests will be accepted."
    default: []
