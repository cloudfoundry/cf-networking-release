---
name: policy-server-internal
templates:
  bpm.yml.erb: config/bpm.yml
  post-start.erb: bin/post-start
  policy-server-internal.json.erb: config/policy-server-internal.json
  ca.crt.erb: config/certs/ca.crt
  server.crt.erb: config/certs/server.crt
  server.key.erb: config/certs/server.key
  dns_health_check.erb: bin/dns_health_check
  database_ca.crt.erb: config/certs/database_ca.crt

packages:
  - policy-server
  - networking-ctl-utils

consumes:
- name: database
  type: database
  optional: true
- name: dbconn
  type: dbconn
- name: tag_length
  type: tag_length

properties:
  disable:
    description: "Disable container to container networking."
    default: false

  listen_ip:
    description: "IP address where the policy server will serve its API."
    default: 0.0.0.0

  debug_port:
    description: "Port for the debug server. Use this to adjust log level at runtime or dump process stats."
    default: 31945

  health_check_port:
    description: "The port for the health endpoint"
    default: 31946

  health_check_timeout_seconds:
    description: "Health check timeout"
    default: 5

  internal_listen_port:
    description: "Port where the policy server will serve its internal API."
    default: 4003

  ca_cert:
    description: "Trusted CA certificate that was used to sign the vxlan policy agent's client cert and key."

  server_cert:
    description: "Server certificate for TLS. Must have common name that matches the Bosh DNS name of the policy server, eg `policy-server.service.cf.internal`."

  server_key:
    description: "Server key for TLS."

  metron_port:
    description: "Port of metron agent on localhost. This is used to forward metrics."
    default: 3457

  log_level:
    description: "Logging level (debug, info, warn, error)."
    default: info

  database.connect_timeout_seconds:
    description: "Connection timeout between the policy server and its database."
    default: 120

  max_open_connections:
    description: |
      Maximum number of open connections to the SQL database.

      The number of necessary connections will scale with the number of diego-cells in the deployment.
      The handlers that use the db conns in this job respond to the vxlan-policy-agent, which runs on the diego-cells.
      Each agent polls this server once every 5s, by default.
      Anecdote: in an environment with ~300 diego-cells has seen use up to ~200 conns.
      Anecdote: in an environment with ~200 diego-cells has seen use up to ~170 conns.
      In these scenarios, each instance of this job would expect total-number-of-conns/job-instance-count conns each.
      Idle state will likely use fewer connections.
    default: 200

  max_idle_connections:
    description: |
      Maximum number of idle connections to the SQL database

      Idle connections will be retained until their `connections_max_lifetime_seconds` has been reached.
    default: 10

  connections_max_lifetime_seconds:
    description: |
      Sets the maximum amount of time a connection may be reused. Expired connections may be closed lazily before reuse.
      If value <= 0, connections are reused forever

      If there is a spike in connection usage, all of these connections have the potential to stick around with a high lifetime.
      Lowering the lifetime will result in connections getting reaped sooner, but the policy server may have to renegotiate connections
      more often, which could add some latency. We recommend using the default unless you have seen specific needs to change it.
    default: 3600
